{
	"Repair Actions": {
		"Assignment": {
			"assignAdd": {
				"name": "Addition",
				"fullname": "Assignment addition"
			},
			"assignRem": {
				"name": "Removal",
				"fullname": "Assignment removal"
			},
			"assignExpChange": {
				"name": "Expression modification",
				"fullname": "Assignment expression modification"
			}
		},
		"Conditional": {
			"condBranIfAdd": {
				"name": "if branch addition",
				"fullname": "Conditional (if) branch addition"
			},
			"condBranIfElseAdd": {
				"name": "if-else branches addition",
				"fullname": "Conditional (if-else) branches addition"
			},
			"condBranElseAdd": {
				"name": "else branch addition",
				"fullname": "Conditional (else) branch addition"	
			},
			"condBranRem": {
				"name": "Removal",
				"fullname": "Conditional (if or else) branch removal"		
			},
			"condExpExpand": {
				"name": "Expression expansion",
				"fullname": "Conditional expression expansion"
			},
			"condExpRed": {
				"name": "Expression reduction",
				"fullname": "Conditional expression reduction"
			},
			"condExpMod": {
				"name": "Expression modification",
				"fullname": "Conditional expression modification"
			}
		},
		"Exception": {
			"exTryCatchAdd": {
				"name": "try-catch addition"
			},
			"exTryCatchRem": {
				"name": "try-catch removal"
			},
			"exThrowsAdd": {
				"name": "throw addition"
			},
			"exThrowsRem": {
				"name": "throw removal"
			}
		},
		"Loop": {
			"loopAdd": {
				"name": "Addition",
				"fullname": "Loop addition"
			},
			"loopRem": {
				"name": "Removal",
				"fullname": "Loop removal"
			},
			"loopCondChange": {
				"name": "Conditional expression modification",
				"fullname": "Loop conditional expression modification"
			},
			"loopInitVector": {
				"name": "Vector initialization modification",
				"fullname": "Add, remove or modify a vector initialization in a loop"
			},
			"loopInitChange": {
				"name": "Loop initialization modification",
				"fullname": "Change loop initialization fields"
			}
		},
		"Method Call": {
			"mcAdd": {
				"name": "Addition",
				"fullname": "Method call addition"
			},
			"mcRem": {
				"name": "Removal",
				"fullname": "Method call removal"
			},
			"mcRepl": {
				"name": "Replacement",
				"fullname": "Method call replacement"
			},
			"mcMove": {
				"name": "Moving",
				"fullname": "Method call moving"
			},
			"mcParAdd": {
				"name": "Parameter addition",
				"fullname": "Method call parameter addition"
			},
			"mcParRem": {
				"name": "Parameter removal",
				"fullname": "Method call parameter removal"
			},
			"mcParSwap": {
				"name": "Parameter value swapping",
				"fullname": "Method call parameter value swapping"
			},
			"mcParValChange": {
				"name": "Parameter value modification",
				"fullname": "Method call parameter value modification"
			}
		},
		"Method Definition": {
			"mdAdd": {
				"name": "Addition",
				"fullname": "Method addition"
			},
			"mdRem": {
				"name": "Removal",
				"fullname": "Method removal"
			},
			"mdRen": {
				"name": "Renaming",
				"fullname": "Method renaming"
			},
			"mdParAdd": {
				"name": "Parameter addition",
				"fullname": "Method parameter addition"
			},
			"mdParRem": {
				"name": "Parameter removal",
				"fullname": "Method parameter removal"
			},
			"mdParTyChange": {
				"name": "Parameter type modification",
				"fullname": "Method parameter type modification"
			},
			"mdRetTyChange": {
				"name": "Return type modification",
				"fullname": "Method return type modification"
			}
		},
		"Object Instantiation": {
			"objInstAdd": {
				"name": "Addition",
				"fullname": "Object instantiation addition"
			},
			"objInstRem": {
				"name": "Removal",
				"fullname": "Object instantiation removal"
			},
			"objInstMod": {
				"name": "Modification",
				"fullname": "Object instantiation modification"
			}
		},
		"Return": {
			"retBranchAdd": {
				"name": "Addition",
				"fullname": "Return statement addition"
			},
			"retRem": {
				"name": "Removal",
				"fullname": "Return statement removal"
			},
			"retExpChange": {
				"name": "Expression modification",
				"fullname": "Return expression modification"
			}
		},
		"Type": {
			"tyAdd": {
				"name": "Type addition",
				"fullname": "Type addition"
			},
			"tyChange": {
				"name": "Variable type modification",
				"fullname": "Variable type modification"
			},
			"tyModChange": {
				"name": "Type modifier modification",
				"fullname": "Type modifier modification"
			},
			"typImpInterf": {
				"name": "Type implemented interface motification",
				"fullname": "Type implemented interface motification"
			},
			"typObj2Met": {
				"name": "Direct object access replacement",
				"fullname": "Direct object access replacement by a method call"
			},
			"dsInitValChange": {
				"name": "Data structure initialization modification",
				"fullname": "Data structure initialization modification"
			},
			"dsDimChange": {
				"name": "Data structure dimension modification",
				"fullname": "Data structure dimension modification"
			}
		},
		"Variable": {
			"varAdd": {
				"name": "Addition",
				"fullname": "Variable addition"
			},
			"varRem": {
				"name": "Removal",
				"fullname": "Variable removal"
			},
			"varRepl": {
				"name": "Replacement",
				"fullname": "Variable replacement"
			}
		}
	},
	"Repair Patterns": {
		"Conditional Block": {
			"condBlockOthersAdd": {
				"name": "Add Simple Branch",
				"fullname": "Add other kinds of simple conditional block"
			},
			"condBlockRetAdd": {
				"name": "Add Return Branch",
				"fullname": "Add conditional block with return statement"

			},
			"condBlockExcAdd": {
				"name": "Add Exception Throwing",
				"fullname": "Add conditional block with Exception Throws statement"
			},
			"condBlockRem": {
				"name": "Remove Conditional Block",
				"fullname": "Remove conditional block"
			}
		},
		"Expression": {
			"expLogicExpand": {
				"name": "Expand Logic Exp.",
				"fullname": "Expand logic expression"
			},
			"expLogicReduce": {
				"name": "Reduce Logic Exp.",
				"fullname": "Reduce Logic expression"
			},
			"expLogicMod": {
				"name": "Modify Logic Exp.",
				"fullname": "Modify logic expression"
			},
			"expArithMod": {
				"name": "Modify Arithmetic Exp.",
				"fullname": "Expand arithmetic expression"
			}
		},
		"Wrap with": {
			"wrapsIf": {
				"name": "If",
				"fullname": "Wrap with an if"
			},
			"wrapsIfElse": {
				"name": "Else/if",
				"fullname": "Wrap with an else/if"
			},
			"wrapsElse": {
				"name": "Else",
				"fullname": "Wrap with an else"
			},
			"wrapsTryCatch": {
				"name": "Try/catch",
				"fullname": "Wrap with a try/catch"
			},
			"wrapsMethod": {
				"name": "Method",
				"fullname": "Wrap with a method invocation"
			},
			"wrapsLoop": {
				"name": "Loop",
				"fullname": "Wrap with a loop"
			},
			"unwrap": {
				"name": "Unwrap",
				"fullname": "Unwrap"
			}
		},
		"Missing Null Check": {
			"missNullCheckP": {
				"name": "Null (== null)",
				"fullname": "Add a missing null check"
			},
			"missNullCheckN": {
				"name": "Not Null (!= null)",
				"fullname": "Add a missing not null check"
			}
		},
		"Other": {
			"initFix": {
				"name": "Fix Initialisation"
			},
			"codeMove": {
				"name": "Move code"
			},
			"wrongRef": {
				"name": "Wrong Reference"
			},
			"singleLine": {
				"name": "Single line"
			},
			"notClassified": {
				"name": "Not classified"
			},
			"copyPaste": {
				"name": "Copy/Paste"
			}
		}
	},
	"Runtime Information": {
		"Automatic Repair": {
			"rtAcs": {
				"name": "ACS",
				"fullname": "Fix with ACS"
			},
			"rtAstor": {
				"name": "jKali",
				"fullname": "Fix with jKali"
			},
			"rtDynaMoth": {
				"name": "DynaMoth",
				"fullname": "Fix with DynaMoth"
			},
			"rtGenProg": {
				"name": "jGenProg",
				"fullname": "Fix with jGenProg"
			},
			"rtHDRepair": {
				"name": "HDRepair",
				"fullname": "Fix with HDRepair"
			},
			"rtNopol": {
				"name": "Nopol",
				"fullname": "Fix with Nopol"
			}
		}
	}
}
