{
	"Repair Actions": {
		"Assignment": {
			"assignAdd": {
				"name": "Add",
				"fullname": "Add assignment"
			},
			"assignRem": {
				"name": "Remove",
				"fullname": "Remove assignment"
			},
			"assignExpChange": {
				"name": "Change expression",
				"fullname": "Change assignment expression"
			}
		},
		"Conditionals": {
			"condExpRed": {
				"name": "Reduce Expression",
				"fullname": "Reduce conditional expression"
			},
			"condExpExpand": {
				"name": "Expand Expression",
				"fullname": "Expand conditional expression"
			},
			"condExpMod": {
				"name": "Modify Expression",
				"fullname": "Modify conditional expression"
			},
			"condBranIfAdd": {
				"name": "Add if branch",
				"fullname": "Add conditional (if) branch"
			},
			"condBranIfElseAdd": {
				"name": "Add if-else branches",
				"fullname": "Add conditional (if-else) branches"
			},
			"condBranElseAdd": {
				"name": "Add else branch",
				"fullname": "Add conditional (else) branch"	
			},
			"condBranRem": {
				"name": "Remove branch",
				"fullname": "Remove conditional (if or else) branch"		
			}
		},
		"Exception": {
			"exTryCatchAdd": {
				"name": "Add Try Catch"
			},
			"exTryCatchRem": {
				"name": "Remove Try Catch"
			},
			"exThrowsAdd": {
				"name": "Add Throws"
			},
			"exThrowsRem": {
				"name": "Remove Throws"
			}
		},
		"Loop": {
			"loopAdd": {
				"name": "Add",
				"fullname": "Add loop"
			},
			"loopRem": {
				"name": "Remove",
				"fullname": "Remove loop"
			},
			"loopCondChange": {
				"name": "Change Loop Condition",
				"fullname": "Change loop conditional expression"
			},
			"loopInitVector": {
				"name": "Change Vector Initialisation",
				"fullname": "Add, remove or modify a vector initialisation in a loop"
			},
			"loopInitChange": {
				"name": "Change Loop Initialisation",
				"fullname": "Change loop Initialisation fields"
			}
		},
		"Method Call": {
			"mcAdd": {
				"name": "Add",
				"fullname": "Add method call"
			},
			"mcRem": {
				"name": "Remove",
				"fullname": "Remove method call"
			},
			"mcRepl": {
				"name": "Replace",
				"fullname": "Replace method call"
			},
			"mcParSwap": {
				"name": "Swap Argument",
				"fullname": "Swap method call argument"
			},
			"mcParAdd": {
				"name": "Add Argument",
				"fullname": "Add method call argument"
			},
			"mcParRem": {
				"name": "Remove Parameters",
				"fullname": "Change method call argument"
			},
			"mcParValChange": {
				"name": "Change Argument Value",
				"fullname": "Change method call argument value"
			},
			"mcMove": {
				"name": "Move",
				"fullname": "Move method call"
			}
		},
		"Method Definition": {
			"mdAdd": {
				"name": "Add",
				"fullname": "Add method"
			},
			"mdRem": {
				"name": "Remove",
				"fullname": "Remove method"
			},
			"mdRen": {
				"name": "Rename",
				"fullname": "Rename method"
			},
			"mdParAdd": {
				"name": "Add Parameter",
				"fullname": "Add method parameter"
			},
			"mdParRem": {
				"name": "Remove Parameter",
				"fullname": "Remove method parameter"
			},
			"mdRetTyChange": {
				"name": "Change Return Type",
				"fullname": "Change method return type"
			},
			"mdParTyChange": {
				"name": "Change Parameters Type",
				"fullname": "Change method parameter type"
			}
		},
		"Object Instantiation": {
			"objInstAdd": {
				"name": "Add",
				"fullname": "Add object instantiation"
			},
			"objInstRem": {
				"name": "Remove",
				"fullname": "Remove object instantiation"
			},
			"objInstMod": {
				"name": "Modify",
				"fullname": "Modify object instantiation"
			}
		},
		"Return": {
			"retExpChange": {
				"name": "Change Value",
				"fullname": "Change returned value, modifying expression"
			},
			"retBranchAdd": {
				"name": "Add",
				"fullname": "Add return statement"
			},
			"retRem": {
				"name": "Remove",
				"fullname": "Remove return statement"
			}
		},
		"Type": {
			"tyChange": {
				"name": "Change type",
				"fullname": "Change variable type"
			},
			"dsInitValChange": {
				"name": "Change Initialisation",
				"fullname": "Change initialisation of a data structure (object, vector or variable)"
			},
			"tyModChange": {
				"name": "Change Modifier",
				"fullname": "Change type modifier"
			},
			"dsDimChange": {
				"name": "Change Dimension",
				"fullname": "Change dimension of a data structure"
			},
			"typObj2Met": {
				"name": "Replace Direct Reference",
				"fullname": "Replace direct reference to an object by a method call"
			},
			"tyAdd": {
				"name": "Create type",
				"fullname": "Create a new type"
			},
			"typImpInterf": {
				"name": "Change Implemented Interface",
				"fullname": "Change impelmented interface in type"
			}
		},
		"Variable": {
			"varAdd": {
				"name": "Add",
				"fullname": "Add variable"
			},
			"varRem": {
				"name": "Remove",
				"fullname": "Remove variable"
			},
			"varRepl": {
				"name": "Replace",
				"fullname": "Replace variable"
			}
		}
	},
	"Repair Patterns": {
		"Conditional Block": {
			"condBlockOthersAdd": {
				"name": "Add Simple Branch",
				"fullname": "Add other kinds of simple conditional block"
			},
			"condBlockRetAdd": {
				"name": "Add Return Branch",
				"fullname": "Add conditional block with return statement"

			},
			"condBlockExcAdd": {
				"name": "Add Exception Throwing",
				"fullname": "Add conditional block with Exception Throws statement"
			},
			"condBlockRem": {
				"name": "Remove Conditional Block",
				"fullname": "Remove conditional block"
			}
		},
		"Expression": {
			"expLogicExpand": {
				"name": "Expand Logic Exp.",
				"fullname": "Expand logic expression"
			},
			"expLogicReduce": {
				"name": "Reduce Logic Exp.",
				"fullname": "Reduce Logic expression"
			},
			"expLogicMod": {
				"name": "Modify Logic Exp.",
				"fullname": "Modify logic expression"
			},
			"expArithMod": {
				"name": "Modify Arithmetic Exp.",
				"fullname": "Expand arithmetic expression"
			}
		},
		"Wrap with": {
			"wrapsIf": {
				"name": "If",
				"fullname": "Wrap with an if"
			},
			"wrapsIfElse": {
				"name": "Else/if",
				"fullname": "Wrap with an else/if"
			},
			"wrapsElse": {
				"name": "Else",
				"fullname": "Wrap with an else"
			},
			"wrapsTryCatch": {
				"name": "Try/catch",
				"fullname": "Wrap with a try/catch"
			},
			"wrapsMethod": {
				"name": "Method",
				"fullname": "Wrap with a method invocation"
			},
			"wrapsLoop": {
				"name": "Loop",
				"fullname": "Wrap with a loop"
			},
			"unwrap": {
				"name": "Unwrap",
				"fullname": "Unwrap"
			}
		},
		"Missing Null Check": {
			"missNullCheckP": {
				"name": "Null (== null)",
				"fullname": "Add a missing null check"
			},
			"missNullCheckN": {
				"name": "Not Null (!= null)",
				"fullname": "Add a missing not null check"
			}
		},
		"Other": {
			"initFix": {
				"name": "Fix Initialisation"
			},
			"codeMove": {
				"name": "Move code"
			},
			"wrongRef": {
				"name": "Wrong Reference"
			},
			"singleLine": {
				"name": "Single line"
			},
			"notClassified": {
				"name": "Not classified"
			},
			"copyPaste": {
				"name": "Copy/Paste"
			}
		}
	},
	"Runtime Information": {
		"Automatic Repair": {
			"rtAcs": {
				"name": "ACS",
				"fullname": "Fix with ACS"
			},
			"rtAstor": {
				"name": "jKali",
				"fullname": "Fix with jKali"
			},
			"rtDynaMoth": {
				"name": "DynaMoth",
				"fullname": "Fix with DynaMoth"
			},
			"rtGenProg": {
				"name": "jGenProg",
				"fullname": "Fix with jGenProg"
			},
			"rtHDRepair": {
				"name": "HDRepair",
				"fullname": "Fix with HDRepair"
			},
			"rtNopol": {
				"name": "Nopol",
				"fullname": "Fix with Nopol"
			}
		}
	}
}
